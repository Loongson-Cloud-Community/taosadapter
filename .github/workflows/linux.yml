name: GO_LINUX

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build
    steps:
      - name: checkout TDengine
        uses: actions/checkout@v3
        with:
          repository: 'taosdata/TDengine'
          path: 'TDengine'
          ref: '3.0'

      - name: Get latest commit ID
        run: |
          cd TDengine
          COMMIT_ID=$(git rev-parse HEAD)
          echo $COMMIT_ID

      - name: Cache server
        id: cache-server
        uses: actions/cache@v3
        env:
          cache-name: td-mac
        with:
          path: server.tar.gz
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ steps.get_commit_id.outputs.commit_id }}
          restore-keys: |
            ${{ runner.os }}-td-${{ env.cache-name }}-

      - name: install TDengine
        if: ${{ steps.cache-server.outputs.cache-hit != 'true' }}
        run: |
          cd TDengine
          mkdir debug
          cd debug
          cmake .. -DBUILD_JDBC=false -DBUILD_TEST=off -DVERNUMBER=3.9.9.9
          make -j 4

      - name: package
        if: ${{ steps.cache-server.outputs.cache-hit != 'true' }}
        run: |
          mkdir -p ./release
          cp ./TDengine/debug/build/bin/taos ./release/
          cp ./TDengine/debug/build/bin/taosd ./release/
          cp ./TDengine/debug/build/lib/libtaos.so.3.9.9.9 ./release/
          cp ./TDengine/include/client/taos.h ./release/
          cat >./release/install.sh<<EOF 
          chmod +x ./taos
          chmod +x ./taosd
          cp ./taos /bin/
          cp ./taosd /bin/
          cp ./libtaos.so.3.9.9.9 /usr/lib
          ln -sf /usr/lib/libtaos.so.3.9.9.9 /usr/lib/libtaos.so.1
          ln -sf /usr/lib/libtaos.so.1 /usr/lib/libtaos.so
          cp ./taos.h /usr/include
          EOF
          tar -zcvf server.tar.gz ./release

  test_build:
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        go: [ '1.17', '1.19' ]
    name: Build taosAdapter ${{ matrix.go }}
    steps:
      - name: Cache server
        id: cache-server
        uses: actions/cache@v3
        env:
          cache-name: td-mac
        with:
          path: server.tar.gz
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ steps.get_commit_id.outputs.commit_id }}
          restore-keys: |
            ${{ runner.os }}-td-${{ env.cache-name }}-
      - name: install
        run: |
          tar -zxvf server.tar.gz
          cd release && sudo sh install.shh
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: 'taosadapter'
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          cache-dependency-path: taosadapter/go.sum
      - name: build taosAdapter
        run: cd ./taosadapter && go build

  test_go_test:
    runs-on: ubuntu-20.04
    needs: test_build
    strategy:
      matrix:
        go: [ '1.17', '1.19' ]
    name: test taosAdapter ${{ matrix.go }}
    steps:
      - name: Cache server
        id: cache-server
        uses: actions/cache@v3
        env:
          cache-name: td-mac
        with:
          path: server.tar.gz
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ steps.get_commit_id.outputs.commit_id }}
          restore-keys: |
            ${{ runner.os }}-td-${{ env.cache-name }}-
      - name: install
        run: |
          tar -zxvf server.tar.gz
          cd release && sudo sh install.sh
      - name: checkout
        uses: actions/checkout@v3
        with:
          path: 'taosadapter'
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          cache-dependency-path: taosadapter/go.sum
      - name: start shell
        run: |
          cat >start.sh<<EOF
          ulimit -n 65535 && TAOS_SUPPORT_VNODES=256 taosd
          EOF

      - name: start taosd
        run: nohup sudo sh ./start.sh &

      - name: test
        run: cd ./taosadapter && go test -v --count=1 ./...
